# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import MUICore_pb2 as MUICore__pb2


class ManticoreUIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Terminate = channel.unary_unary(
                '/muicore.ManticoreUI/Terminate',
                request_serializer=MUICore__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=MUICore__pb2.TerminateResponse.FromString,
                )
        self.Start = channel.unary_unary(
                '/muicore.ManticoreUI/Start',
                request_serializer=MUICore__pb2.CLIArguments.SerializeToString,
                response_deserializer=MUICore__pb2.ManticoreInstance.FromString,
                )
        self.TargetAddress = channel.unary_unary(
                '/muicore.ManticoreUI/TargetAddress',
                request_serializer=MUICore__pb2.AddressRequest.SerializeToString,
                response_deserializer=MUICore__pb2.TargetResponse.FromString,
                )
        self.GetStateList = channel.unary_unary(
                '/muicore.ManticoreUI/GetStateList',
                request_serializer=MUICore__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=MUICore__pb2.MUIStateList.FromString,
                )
        self.GetMessageList = channel.unary_unary(
                '/muicore.ManticoreUI/GetMessageList',
                request_serializer=MUICore__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=MUICore__pb2.MUIMessageList.FromString,
                )
        self.CheckManticoreRunning = channel.unary_unary(
                '/muicore.ManticoreUI/CheckManticoreRunning',
                request_serializer=MUICore__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=MUICore__pb2.ManticoreRunningStatus.FromString,
                )


class ManticoreUIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TargetAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStateList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessageList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckManticoreRunning(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManticoreUIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=MUICore__pb2.ManticoreInstance.FromString,
                    response_serializer=MUICore__pb2.TerminateResponse.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=MUICore__pb2.CLIArguments.FromString,
                    response_serializer=MUICore__pb2.ManticoreInstance.SerializeToString,
            ),
            'TargetAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.TargetAddress,
                    request_deserializer=MUICore__pb2.AddressRequest.FromString,
                    response_serializer=MUICore__pb2.TargetResponse.SerializeToString,
            ),
            'GetStateList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStateList,
                    request_deserializer=MUICore__pb2.ManticoreInstance.FromString,
                    response_serializer=MUICore__pb2.MUIStateList.SerializeToString,
            ),
            'GetMessageList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessageList,
                    request_deserializer=MUICore__pb2.ManticoreInstance.FromString,
                    response_serializer=MUICore__pb2.MUIMessageList.SerializeToString,
            ),
            'CheckManticoreRunning': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckManticoreRunning,
                    request_deserializer=MUICore__pb2.ManticoreInstance.FromString,
                    response_serializer=MUICore__pb2.ManticoreRunningStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'muicore.ManticoreUI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManticoreUI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/Terminate',
            MUICore__pb2.ManticoreInstance.SerializeToString,
            MUICore__pb2.TerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/Start',
            MUICore__pb2.CLIArguments.SerializeToString,
            MUICore__pb2.ManticoreInstance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TargetAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/TargetAddress',
            MUICore__pb2.AddressRequest.SerializeToString,
            MUICore__pb2.TargetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStateList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/GetStateList',
            MUICore__pb2.ManticoreInstance.SerializeToString,
            MUICore__pb2.MUIStateList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessageList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/GetMessageList',
            MUICore__pb2.ManticoreInstance.SerializeToString,
            MUICore__pb2.MUIMessageList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckManticoreRunning(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muicore.ManticoreUI/CheckManticoreRunning',
            MUICore__pb2.ManticoreInstance.SerializeToString,
            MUICore__pb2.ManticoreRunningStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
